#include <stdio.h>
int isEven(int num) {
    return num % 2 == 0;
}
void stablePartition(int nums[], int n) {
    int temp[n];
    int evenIndex = 0, oddIndex = 0;
    for (int i = 0; i < n; i++) {
        if (!isEven(nums[i])) {
            oddIndex = i;
            break;
        }
    }
    for (int i = 0; i < n; i++) {
        if (isEven(nums[i])) {
            temp[evenIndex++] = nums[i];
        }
    }
    for (int i = oddIndex; i < n; i++) {
        if (!isEven(nums[i])) {
            temp[evenIndex++] = nums[i];
        }
    }
    for (int i = 0; i < n; i++) {
        nums[i] = temp[i];
    }
}
void printArray(int nums[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", nums[i]);
    }
    printf("\n");
}
int main() {
    int nums[] = {9, 4, 1, 6, 3, 2, 7, 8, 5, 10}; 
    int n = sizeof(nums) / sizeof(nums[0]);
    printf("Original array: ");
    printArray(nums, n);
    stablePartition(nums, n);
    printf("Partitioned array: ");
    printArray(nums, n);
    return 0;
}
