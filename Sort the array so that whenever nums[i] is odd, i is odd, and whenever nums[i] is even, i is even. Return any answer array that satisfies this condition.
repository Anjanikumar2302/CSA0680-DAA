#include <stdio.h>

// Function to sort the array based on the given condition
void sortArrayByParity(int nums[], int n) {
    int evenIndex = 0; // Pointer for even index
    int oddIndex = 1;  // Pointer for odd index

    while (evenIndex < n && oddIndex < n) {
        // Find the next misplaced even number
        while (evenIndex < n && nums[evenIndex] % 2 == 0) {
            evenIndex += 2;
        }

        // Find the next misplaced odd number
        while (oddIndex < n && nums[oddIndex] % 2 != 0) {
            oddIndex += 2;
        }

        // Swap misplaced even and odd numbers
        if (evenIndex < n && oddIndex < n) {
            int temp = nums[evenIndex];
            nums[evenIndex] = nums[oddIndex];
            nums[oddIndex] = temp;
        }
    }
}

// Function to print an array
void printArray(int nums[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", nums[i]);
    }
    printf("\n");
}

int main() {
    int nums[] = {4, 2, 5, 7, 6, 1, 3, 8}; // Example array
    int n = sizeof(nums) / sizeof(nums[0]);

    printf("Original array: ");
    printArray(nums, n);

    sortArrayByParity(nums, n);

    printf("Sorted array: ");
    printArray(nums, n);

    return 0;
}
